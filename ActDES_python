# install conda environment for package managment -
# https://docs.conda.io/en/latest/miniconda.html

# Install local blast for python

conda install -c bioconda blast=2.7.1

# make blast database - guide here -  https://angus.readthedocs.io/en/2019/running-command-line-blast.html
# ActDES database file is all_protein_sequences.fasta 

makeblastdb -in all_protein_sequences.fasta -dbtype prot -parse_seqids

# makeblast command will generate a series of database files in the directory, this can then be searched, like below, -evalue can be altered to increase stringency of the search

blastp -query your_sequence_query.fasta -db all_protein_sequences.fasta -evalue 0.1 -outfmt 6 -max_target_seqs 10000000|cut -f 2 > output_filename.txt

# use the 'sort' and 'uniq' functions in Bash to sort the entries and then remove the duplicates from the list

sort output_filename.txt | uniq > output_filename_Unique.txt

# use 'blastdbcmd' to extract the sequences from your database

blastdbcmd -dbtype prot -db all_protein_sequences.fasta -entry_batch output_filename_Unique.txt > output_filename_hits_Unique.fasta

# install the Muscle alignment program

conda install -c bioconda muscle

# run muscle on the output_filename_hits_Unique.fasta file

muscle -in output_filename_hits_Unique.fasta -out output_filename_hits_Unique.afa

# use GBLOCKS to clean the gaps of the alignment 

conda install -c bioconda gblocks

gblocks output_filename_hits_Unique.afa -b4=5 -b5=H -b3=10>LOGhits.GBLOCKS  

#Install hmmer utility to enable file format changes, and to use the esl utility contained within

conda install -c bioconda hmmer

#run esl command to change the aligned fasta file (.afa) file to Stockholm format (.sto) that is readable by quick tree

esl-reformat stockholm output_filename_hits_Unique.afa > output_filename_hits_Unique.sto

# install Quicktree to build a phylogenetic tree from the alignment

conda install -c bioconda quicktree

# run Quick Tree to build a bootstrapped tree

quicktree -in a -out t -boot 1000 output_filename_hits_Unique.sto > output_filename_hits_Unique.tree

# Tree can take several hours to run and the .tree file can be viewed in a number of programs - https://itol.embl.de/ is good and has lots of options
